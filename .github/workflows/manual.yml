name: DBA workflow

on:
  workflow_dispatch:
    inputs:
      instance:
        required: true
        default: 'test-3'
        type: string
      database_name:
        required: true
        type: string
      test_only:
        type: choice
        default: 'Yes'
        options:
         - 'Yes'
         - 'No'
         

jobs:
  dba:
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/972321173961/locations/global/workloadIdentityPools/gh-pool-ohz/providers/gh-provider-ohz'
        service_account: 'cloudsql-admin-sa@impactful-mode-268210.iam.gserviceaccount.com'
        audience: 'google-wlif'
        
    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
      
    - name: 'IAM user init'
      if: github.event.input.test_only == 'No'
      env:
         PGPASSWORD: ${{ secrets.PASSWORD }}
      run: |-
        # set password for the default user
        gcloud sql users set-password postgres \
          --instance=${{ inputs.instance }} \
          --password=${PGPASSWORD}
     
        # start proxy
        wget -q https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
        chmod +x cloud_sql_proxy
        ./cloud_sql_proxy -enable_iam_login -instances=impactful-mode-268210:us-central1:${{ inputs.instance }}=tcp:5432 &
        sleep 5
        
        # do grants
        psql "hostaddr=127.0.0.1 user=postgres"  <<END_OF_SQL
        ALTER ROLE "cloudsql-admin-sa@impactful-mode-268210.iam" WITH CREATEDB CREATEROLE;
        END_OF_SQL
        
        # drop postgres user
        psql "hostaddr=127.0.0.1 dbname=postgres user='cloudsql-admin-sa@impactful-mode-268210.iam'"  <<END_OF_SQL
        DROP USER postgres;
        END_OF_SQL
        
    - name: 'Verify IAM SA Admin user'
      run: |-      
        # start proxy
        wget -q https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
        chmod +x cloud_sql_proxy
        ./cloud_sql_proxy -enable_iam_login -instances=impactful-mode-268210:us-central1:${{ inputs.instance }}=tcp:5432 &
        sleep 5
        
        # test
        # TODO: protection from SQL injection
        psql "hostaddr=127.0.0.1 dbname=postgres user='cloudsql-admin-sa@impactful-mode-268210.iam'"  <<END_OF_SQL
        CREATE USER admin;
        ALTER ROLE admin WITH CREATEDB CREATEROLE;
        create extension btree_gin;
        END_OF_SQL
