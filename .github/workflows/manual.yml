name: DBA workflow

on:
  workflow_dispatch:
    inputs:
      instance:
        required: true
        default: 'test-1'
        type: string
      database_name:
        required: true
        type: string

jobs:
  dba:
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - id: idtoken
      shell: bash
      run: |
        token=${ACTIONS_ID_TOKEN_REQUEST_TOKEN}
        runtimeUrl=${ACTIONS_ID_TOKEN_REQUEST_URL}
        runtimeUrl="${runtimeUrl}&audience=google-wlif"
        ID_TOKEN=$(curl -H "Authorization: bearer ${token}" ${runtimeUrl} | jq -r ".value")
        echo ::set-output name=idtoken::$ID_TOKEN
        echo $ID_TOKEN > idtoken.txt
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/972321173961/locations/global/workloadIdentityPools/gh-pool-ohz/providers/gh-provider-ohz'
        service_account: 'cloudsql-admin-sa@impactful-mode-268210.iam.gserviceaccount.com'
        audience: 'google-wlif'
        
    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
      
    - name: 'test'
      run: |-
        gcloud sql users set-password postgres \
          --instance=${{ inputs.instance }} \
          --password=${{ secrets.password }}
